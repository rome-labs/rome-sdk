name: Build SDK

on:
  push:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      rome_evm_branch:
        description: 'Branch name for the rome-evm repository'
        required: false
        default: 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev
      - name: Checkout code
        uses: actions/checkout@master
        with:
          path: rome-sdk
          token: ${{ secrets.GIT_ROLLUP_TOKEN }}

      - name: 'Determine EVM branch name'
        id: get_branch_name
        run: |
          # If it's a workflow_dispatch, use the provided branch name
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            EVM_BRANCH_NAME="${{ github.event.inputs.rome_evm_branch }}"
          else
            # Check if the SDK branch is main (i.e., the default branch)
            SDK_BRANCH="${{ github.ref_name }}"
            if [ "$SDK_BRANCH" == "main" ]; then
              EVM_BRANCH_NAME="master"
            else
              # Get branch name from commit message or default to master if not provided
              if [[ "${{ github.event.head_commit.message }}" =~ "rome-evm-branch:" ]]; then
                EVM_BRANCH_NAME=$(echo "${{ github.event.head_commit.message }}" | grep -oP 'rome-evm-branch:\s*\K\S+')
              else
                EVM_BRANCH_NAME="master"
              fi
            fi
          fi
          echo "evm_branch_name=$EVM_BRANCH_NAME" >> $GITHUB_ENV

      - name: 'Checkout EVM repository'
        uses: actions/checkout@master
        with:
          repository: rome-labs/rome-evm
          path: rome-evm
          ref: ${{ env.evm_branch_name }}
          token: ${{ secrets.GIT_ROLLUP_TOKEN }}

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install Solana
        uses: metadaoproject/setup-solana@v1.0
        with:
          solana-cli-version: 1.18.17

      - name: Add Solana to PATH
        run: echo "/root/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
        shell: bash

      - name: Check Solana version
        run: solana --version

      - name: Build Rome SDK with warnings treated as errors
        run: |
          ls -l
          cd rome-sdk
          RUSTFLAGS="-D warnings" cargo build --release
        env:
          CHAIN_ID: 1001
          CONTRACT_OWNER: 8q76RPN5Tm6thVoQAUFhUP2diddGgtDLA6B6eShSazB2
